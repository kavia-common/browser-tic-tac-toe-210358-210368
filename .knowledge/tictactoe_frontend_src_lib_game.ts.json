{"is_source_file": true, "format": "TypeScript", "description": "This file contains core game logic for a browser-based Tic Tac Toe game, including functions to create a game board, validate moves, determine the winner, apply moves immutably, reset the game, and determine the next player.", "external_files": [], "external_methods": [], "published": ["Cell", "Board", "Player", "GameResult", "createEmptyBoard", "isValidMove", "getWinner", "isDraw", "applyMove", "resetGame", "nextPlayer"], "classes": [], "methods": [{"name": "export function createEmptyBoard(): Board { createEmptyBoard", "description": "Creates a new immutable 3x3 empty game board.", "scope": "", "scopeKind": ""}, {"name": "export function isValidMove(board: Board, index: number): boolean { isValidMove", "description": "Checks if a move at a specific index is valid (i.e., within range and on an unoccupied cell).", "scope": "", "scopeKind": ""}, {"name": "export function getWinner(board: Board): GameResult { getWinner", "description": "Determines if there is a winner and returns related metadata, including the winning line.", "scope": "", "scopeKind": ""}, {"name": "export function isDraw(board: Board): boolean { isDraw", "description": "Checks if the game state is a draw (full board with no winner).", "scope": "", "scopeKind": ""}, {"name": "export function applyMove(board: Board, index: number, player: Player): Board { applyMove", "description": "Returns a new game board with the specified move applied immutably.", "scope": "", "scopeKind": ""}, {"name": "export function resetGame(): Board { resetGame", "description": "Resets the game to a fresh empty board.", "scope": "", "scopeKind": ""}, {"name": "export function nextPlayer(board: Board, defaultStart: Player = \"X\"): Player { nextPlayer", "description": "Determines which player's turn is next based on current board state.", "scope": "", "scopeKind": ""}], "calls": ["Object.freeze", "Array.from", "board.slice", "board.every", "board.filter"], "search-terms": ["immutable game board", "Tic Tac Toe game logic", "winner detection", "move validation", "game reset", "next player logic"], "state": 2, "file_id": 18, "knowledge_revision": 47, "git_revision": "", "revision_history": [{"38": ""}, {"47": ""}], "ctags": [{"_type": "tag", "name": "Board", "path": "/home/kavia/workspace/code-generation/browser-tic-tac-toe-210358-210368/tictactoe_frontend/src/lib/game.ts", "pattern": "/^export type Board = ReadonlyArray<Cell>;$/", "language": "TypeScript", "kind": "alias"}, {"_type": "tag", "name": "Cell", "path": "/home/kavia/workspace/code-generation/browser-tic-tac-toe-210358-210368/tictactoe_frontend/src/lib/game.ts", "pattern": "/^export type Cell = \"X\" | \"O\" | null;$/", "language": "TypeScript", "kind": "alias"}, {"_type": "tag", "name": "GameResult", "path": "/home/kavia/workspace/code-generation/browser-tic-tac-toe-210358-210368/tictactoe_frontend/src/lib/game.ts", "pattern": "/^export interface GameResult {$/", "language": "TypeScript", "kind": "interface"}, {"_type": "tag", "name": "Player", "path": "/home/kavia/workspace/code-generation/browser-tic-tac-toe-210358-210368/tictactoe_frontend/src/lib/game.ts", "pattern": "/^export type Player = \"X\" | \"O\";$/", "language": "TypeScript", "kind": "alias"}, {"_type": "tag", "name": "a", "path": "/home/kavia/workspace/code-generation/browser-tic-tac-toe-210358-210368/tictactoe_frontend/src/lib/game.ts", "pattern": "/^    const v = board[a];$/", "language": "TypeScript", "kind": "constant", "scope": "getWinner", "scopeKind": "function"}, {"_type": "tag", "name": "a", "path": "/home/kavia/workspace/code-generation/browser-tic-tac-toe-210358-210368/tictactoe_frontend/src/lib/game.ts", "pattern": "/^  for (const [a, b, c] of lines) {$/", "language": "TypeScript", "kind": "constant", "scope": "getWinner", "scopeKind": "function"}, {"_type": "tag", "name": "applyMove", "path": "/home/kavia/workspace/code-generation/browser-tic-tac-toe-210358-210368/tictactoe_frontend/src/lib/game.ts", "pattern": "/^export function applyMove(board: Board, index: number, player: Player): Board {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "b", "path": "/home/kavia/workspace/code-generation/browser-tic-tac-toe-210358-210368/tictactoe_frontend/src/lib/game.ts", "pattern": "/^  for (const [a, b, c] of lines) {$/", "language": "TypeScript", "kind": "constant", "scope": "getWinner", "scopeKind": "function"}, {"_type": "tag", "name": "c", "path": "/home/kavia/workspace/code-generation/browser-tic-tac-toe-210358-210368/tictactoe_frontend/src/lib/game.ts", "pattern": "/^  for (const [a, b, c] of lines) {$/", "language": "TypeScript", "kind": "constant", "scope": "getWinner", "scopeKind": "function"}, {"_type": "tag", "name": "createEmptyBoard", "path": "/home/kavia/workspace/code-generation/browser-tic-tac-toe-210358-210368/tictactoe_frontend/src/lib/game.ts", "pattern": "/^export function createEmptyBoard(): Board {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "draw", "path": "/home/kavia/workspace/code-generation/browser-tic-tac-toe-210358-210368/tictactoe_frontend/src/lib/game.ts", "pattern": "/^  const draw = board.every((x) => x !== null);$/", "language": "TypeScript", "kind": "constant", "scope": "getWinner", "scopeKind": "function"}, {"_type": "tag", "name": "draw", "path": "/home/kavia/workspace/code-generation/browser-tic-tac-toe-210358-210368/tictactoe_frontend/src/lib/game.ts", "pattern": "/^  draw: boolean;$/", "language": "TypeScript", "kind": "property", "scope": "GameResult", "scopeKind": "interface"}, {"_type": "tag", "name": "getWinner", "path": "/home/kavia/workspace/code-generation/browser-tic-tac-toe-210358-210368/tictactoe_frontend/src/lib/game.ts", "pattern": "/^export function getWinner(board: Board): GameResult {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "isDraw", "path": "/home/kavia/workspace/code-generation/browser-tic-tac-toe-210358-210368/tictactoe_frontend/src/lib/game.ts", "pattern": "/^export function isDraw(board: Board): boolean {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "isValidMove", "path": "/home/kavia/workspace/code-generation/browser-tic-tac-toe-210358-210368/tictactoe_frontend/src/lib/game.ts", "pattern": "/^export function isValidMove(board: Board, index: number): boolean {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "line", "path": "/home/kavia/workspace/code-generation/browser-tic-tac-toe-210358-210368/tictactoe_frontend/src/lib/game.ts", "pattern": "/^  line: number[] | null;$/", "language": "TypeScript", "kind": "property", "scope": "GameResult", "scopeKind": "interface"}, {"_type": "tag", "name": "lines", "path": "/home/kavia/workspace/code-generation/browser-tic-tac-toe-210358-210368/tictactoe_frontend/src/lib/game.ts", "pattern": "/^  const lines: number[][] = [$/", "language": "TypeScript", "kind": "constant", "scope": "getWinner", "scopeKind": "function"}, {"_type": "tag", "name": "next", "path": "/home/kavia/workspace/code-generation/browser-tic-tac-toe-210358-210368/tictactoe_frontend/src/lib/game.ts", "pattern": "/^  const next = board.slice() as Cell[];$/", "language": "TypeScript", "kind": "constant", "scope": "applyMove", "scopeKind": "function"}, {"_type": "tag", "name": "nextPlayer", "path": "/home/kavia/workspace/code-generation/browser-tic-tac-toe-210358-210368/tictactoe_frontend/src/lib/game.ts", "pattern": "/^export function nextPlayer(board: Board, defaultStart: Player = \"X\"): Player {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "o", "path": "/home/kavia/workspace/code-generation/browser-tic-tac-toe-210358-210368/tictactoe_frontend/src/lib/game.ts", "pattern": "/^  const o = board.filter((c) => c === \"O\").length;$/", "language": "TypeScript", "kind": "constant", "scope": "nextPlayer", "scopeKind": "function"}, {"_type": "tag", "name": "res", "path": "/home/kavia/workspace/code-generation/browser-tic-tac-toe-210358-210368/tictactoe_frontend/src/lib/game.ts", "pattern": "/^  const res = getWinner(board);$/", "language": "TypeScript", "kind": "constant", "scope": "isDraw", "scopeKind": "function"}, {"_type": "tag", "name": "resetGame", "path": "/home/kavia/workspace/code-generation/browser-tic-tac-toe-210358-210368/tictactoe_frontend/src/lib/game.ts", "pattern": "/^export function resetGame(): Board {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "v", "path": "/home/kavia/workspace/code-generation/browser-tic-tac-toe-210358-210368/tictactoe_frontend/src/lib/game.ts", "pattern": "/^    const v = board[a];$/", "language": "TypeScript", "kind": "constant", "scope": "getWinner", "scopeKind": "function"}, {"_type": "tag", "name": "winner", "path": "/home/kavia/workspace/code-generation/browser-tic-tac-toe-210358-210368/tictactoe_frontend/src/lib/game.ts", "pattern": "/^  winner: Player | null;$/", "language": "TypeScript", "kind": "property", "scope": "GameResult", "scopeKind": "interface"}, {"_type": "tag", "name": "x", "path": "/home/kavia/workspace/code-generation/browser-tic-tac-toe-210358-210368/tictactoe_frontend/src/lib/game.ts", "pattern": "/^  const x = board.filter((c) => c === \"X\").length;$/", "language": "TypeScript", "kind": "constant", "scope": "nextPlayer", "scopeKind": "function"}], "hash": "4e35517e781dd041ff4506f84ceb060e", "format-version": 4, "code-base-name": "tictactoe_frontend", "filename": "tictactoe_frontend/src/lib/game.ts", "fields": [{"name": "export interface GameResult {", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "draw: boolean;", "scope": "GameResult", "scopeKind": "interface", "description": "unavailable"}, {"name": "line: number[] | null;", "scope": "GameResult", "scopeKind": "interface", "description": "unavailable"}, {"name": "winner: Player | null;", "scope": "GameResult", "scopeKind": "interface", "description": "unavailable"}]}